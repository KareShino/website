---
import type { InferEntrySchema } from 'astro:content';
import { getBlogs } from './getBlogAscendingOrder';
import BlogCard from './BlogCard.astro';

const MAX_ARTICLES = 5;
// const MAX_PROJECTS = 5;

interface Props {
  author: InferEntrySchema<'authors'>;
}

const { author } = Astro.props;
const articles = await getBlogs({
  authorId: author.id,
  limit: MAX_ARTICLES,
});
const profileImage = author.profileImage || '/src/assets/cactakun_noimage.webp';
---

<div class="profile">
  
  <div class="profile-info-wrapper">
    <div class="profile-info">
      <div class="profile-image">
        <img src={profileImage} alt="profile image" />
      </div>
      <div class="profile-details">
        <span class="profile-name">{author.name}</span><br />
        <span class="profile-id">@{author.id}</span><br />
        <span>{author.bio}</span><br />
        <div class="social-links">
          <p>
            Twitter(X): <a href={`https://x.com/${author.social.twitter}`}>@{author.social.twitter}</a>
          </p>
          <p>
            GitHub: <a href={`https://github.com/${author.social.github}`}>{author.social.github}</a>
          </p>
        </div>
      </div>
    </div>
  </div>

  <div class="profile-content">
    <div class="articles">
      <h2>書いた記事</h2>
      <hr />
      <div class="articles-grid">
      {
        articles.map((article) => (
          <BlogCard title={article.data.title} coverImage={article.data.coverImage} slug={article.slug} />
        ))
      }
      </div>
    </div>
    <div class="projects">
      <h2>作ったもの</h2>
      ...
    </div>
  </div>
</div>

<style>
  .profile {
    display: flex;
    align-items: flex-start;
    width: 100%;
  }

  .profile-info {
    border: 2px solid;
    border-radius: 8px;
    border-color: #c1c1c1;
    padding: 1.5rem
  }

  .profile-info-wrapper {
    width: 400px;
    min-width: 300px;
  }

  .profile-image {
    width: 100px; /* サイズを小さくする */
    height: 100px; /* サイズを小さくする */
    border-radius: 50%; /* 丸くする */
    border: 2px solid #ccc; /* 外枠 */
    overflow: hidden; /* コンテンツが丸に収まるようにする */
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* 影を追加 */
    display: flex;
    justify-content: center;
    align-items: center; /* 中のコンテンツを中央揃え */
    background-color: #f9f9f9; /* 背景色 */
  }

  .profile-image img {
    width: 90%; /* 丸い枠に収まるよう調整 */
    height: 90%; /* 高さも枠にフィット */
    object-fit: cover; /* 画像を中央で切り抜きながらフィット */
    border-radius: 50%; /* 画像自体も丸くする */
  }

  .profile-name {
    font-size: 1.5rem;
    font-weight: bold;
  }

  .profile-id {
    font-size: 1rem;
    color: #5f5f5f;
    margin: 2em 0;
  }

  .profile-content {
    /* justify-content: right; */
    margin-left: 2rem;
    flex-grow: 1;
  }

  .articles-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
  }


  /* スマホ画面（768px以下）では縦並びに */
@media screen and (max-width: 768px) {
  .profile {
    flex-direction: column;
  }

  .profile-info-wrapper {
    width: 100%;
  }

  .profile-content {
    width: 100%;
    margin-left: 0; /* PC用の余白をリセット */
    margin-top: 2rem; /* 上に余白を追加 */
  }
}
</style>